version: 2
executorType: docker

containerInfo:
  - image: drazisil/ruby-node:1.0.8

stages:
  build:
    workDir: /home/ubuntu/buildwatch
    steps:
      - type: checkout
      - type: shell
        name: Install Ruby Dependencies
        command: bundle install
      - type: shell
        name: Install NodeJS Dependencies
        command: npm install
      - type: shell
        name: Install the Sqlite3 NodeJS Module Seperately
        command: npm install sqlite3
      
      # Not Building Docker image currently
      #- type: shell
      #  name: Install Docker Engine
      #  command: |
      #    echo "test"
      #    curl -L -o /tmp/docker.tgz https://get.docker.com/builds/Linux/x86_64/docker-1.12.3.tgz
      #    tar -xz -C /tmp -f /tmp/docker.tgz
      #    mv /tmp/docker/docker* /usr/bin/
      #    curl -L "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
      #    chmod +x  /usr/bin/docker-compose

      #- type: setup-docker-engine
      #- type: shell
      #  name: Verify Docker Works
      #  command: |
      #    docker --version
      #    docker run ubuntu /bin/echo "Hello world"
      #- type: shell
      #  name: Build Docker Image
      #  command: docker build --rm=false -t buildwatch .
      
      - type: shell
        name: Run Ruby Tests
        command: bundle exec rake test
      - type: shell
        name: Run NodeJS Tests
        command: npm test
      - type: shell
        name: Run NodeJS Coverage
        command: npm run coverage
      - type: shell
        command: mkdir -p /tmp/test-results/junit && cp test-results.xml /tmp/test-results/junit/test-results.xml

      # Save artifacts
      - type: shell
        command: mkdir -p /tmp/artifacts && cp test-results.xml /tmp/artifacts/test-results.xml
      - type: artifacts-store
        path: /tmp/artifacts
        destination: test-results
      - type: artifacts-store
        path: coverage
        destination: ruby-coverage
      - type: artifacts-store
        path: node-coverage
        destination: node-coverage

      # Upload test results
      - type: test-results-store
        path: /tmp/test-results/